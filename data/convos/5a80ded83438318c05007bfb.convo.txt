idRef {
  id: "5a80ded83438318c05007bfb"
}
ui_name: "INTRO-Quartermaster"
nodes {
  idRef {
    id: "5a80f74a3438311411005eb7"
  }
  index: 0
  text: "{{GM}}The ork behind the counter gives you a brief salute as you approach.{{/GM}}\n\n$+(l.lastname).\n\nYou have your orders and gear. Was there anything else you needed from me?"
  branches {
    responseText: ""
    nextNodeIndex: 2
    idRef {
      id: "5a80ded83438318c05007bfb:5a80f76c3438311411005eb9"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5a80def93438318c05007c05"
  }
  index: 1
  text: "{{GM}}The ork quartermaster nods at your approach.{{/GM}}\n\nHey $+(l.lastname).\n\nDigital release on your orders just came through. You\'ve got a green light to assign field gear for you and your squad.\n\nWhatcha looking for?"
  branches {
    responseText: ""
    nextNodeIndex: 2
    idRef {
      id: "5a80ded83438318c05007bfb:5a80f8723438311411005ef2"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5a80f8723438311411005ef5"
  }
  index: 2
  text: ""
  branches {
    responseText: "Armor."
    conditions {
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "bGot_Armor"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 0
            }
          }
        }
      }
    }
    nextNodeIndex: 3
    hideIfUnavailable: true
    idRef {
      id: "5a80ded83438318c05007bfb:5a80f79d3438311411005ebe"
    }
  }
  branches {
    responseText: "How about a gun?"
    conditions {
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "bGot_Firearm"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 0
            }
          }
        }
      }
    }
    nextNodeIndex: 5
    hideIfUnavailable: true
    idRef {
      id: "5a80ded83438318c05007bfb:5a80f79d3438311411005ec0"
    }
  }
  branches {
    responseText: "Melee is my style."
    conditions {
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "bGot_Melee"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 0
            }
          }
        }
      }
    }
    nextNodeIndex: 11
    hideIfUnavailable: true
    idRef {
      id: "5a80ded83438318c05007bfb:5a80f79d3438311411005ec2"
    }
  }
  branches {
    responseText: "Magic?"
    conditions {
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "bGot_Magic"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 0
            }
          }
        }
      }
    }
    nextNodeIndex: 19
    hideIfUnavailable: true
    idRef {
      id: "5a80ded83438318c05007bfb:5a80f7a03438311411005ec4"
    }
  }
  branches {
    responseText: "Got any tech?"
    conditions {
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "bGot_Tech"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 0
            }
          }
        }
      }
    }
    nextNodeIndex: 24
    hideIfUnavailable: true
    idRef {
      id: "5a80ded83438318c05007bfb:5a80f9233438311411005f35"
    }
  }
  branches {
    responseText: "Gimme a minute."
    nextNodeIndex: 31
    idRef {
      id: "5a80ded83438318c05007bfb:5a8107283438311411006b7c"
    }
  }
  branches {
    responseText: "{{CC}}That should do it.{{/CC}}"
    conditions {
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "bGot_Armor"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
      ops {
        functionName: "OR"
        args {
          call_value {
            functionName: "OR"
            args {
              call_value {
                functionName: "Comparison (bool)"
                args {
                  call_value {
                    functionName: "Get Variable (bool)"
                    args {
                      string_value: "bGot_Firearm"
                    }
                  }
                }
                args {
                  call_value {
                    functionName: "Get Preset Value (int)"
                    args {
                      string_value: "IsOrIsNot"
                    }
                    args {
                      int_value: 1
                    }
                  }
                }
                args {
                  call_value {
                    functionName: "Get Preset Value (int)"
                    args {
                      string_value: "bool"
                    }
                    args {
                      int_value: 1
                    }
                  }
                }
              }
            }
            args {
              call_value {
                functionName: "Comparison (bool)"
                args {
                  call_value {
                    functionName: "Get Variable (bool)"
                    args {
                      string_value: "bGot_Magic"
                    }
                  }
                }
                args {
                  call_value {
                    functionName: "Get Preset Value (int)"
                    args {
                      string_value: "IsOrIsNot"
                    }
                    args {
                      int_value: 1
                    }
                  }
                }
                args {
                  call_value {
                    functionName: "Get Preset Value (int)"
                    args {
                      string_value: "bool"
                    }
                    args {
                      int_value: 1
                    }
                  }
                }
              }
            }
          }
        }
        args {
          call_value {
            functionName: "OR"
            args {
              call_value {
                functionName: "Comparison (bool)"
                args {
                  call_value {
                    functionName: "Get Variable (bool)"
                    args {
                      string_value: "bGot_Melee"
                    }
                  }
                }
                args {
                  call_value {
                    functionName: "Get Preset Value (int)"
                    args {
                      string_value: "IsOrIsNot"
                    }
                    args {
                      int_value: 1
                    }
                  }
                }
                args {
                  call_value {
                    functionName: "Get Preset Value (int)"
                    args {
                      string_value: "bool"
                    }
                    args {
                      int_value: 1
                    }
                  }
                }
              }
            }
            args {
              call_value {
                functionName: "Comparison (bool)"
                args {
                  call_value {
                    functionName: "Get Variable (bool)"
                    args {
                      string_value: "bGot_Tech"
                    }
                  }
                }
                args {
                  call_value {
                    functionName: "Get Preset Value (int)"
                    args {
                      string_value: "IsOrIsNot"
                    }
                    args {
                      int_value: 1
                    }
                  }
                }
                args {
                  call_value {
                    functionName: "Get Preset Value (int)"
                    args {
                      string_value: "bool"
                    }
                    args {
                      int_value: 1
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    nextNodeIndex: 32
    hideIfUnavailable: true
    idRef {
      id: "5a80ded83438318c05007bfb:5a81073d3438311411006b81"
    }
  }
  nodeType: ConversationNodeType_Simple
  comment: "GearLoop"
}
nodes {
  idRef {
    id: "5a80f7ac3438311411005ec7"
  }
  index: 3
  text: "{{GM}}The ork checks your orders and whistles.{{/GM}}\n\nSorry about this. I would normally get you the upgraded armor, but with the crazy hiring of all these {{GM}}he makes air quotes{{/GM}} irregular asset teams.\nwell, you have to bribe a shadowrunner to do a job a normal squaddie would do without blinking, and that means most of my specialized gear is already tagged for them.\n\nWell, your orders say you should get the standard stuff. Both fortunately and unfortunately for you, all these runners have depleted our stock. \nI\'ll have to give you the poor weather gear.  It\'s hotter than hell, and a twice as heavy, but it\'s far more bullet resistant."
  branches {
    responseText: "Thanks"
    nextNodeIndex: 4
    idRef {
      id: "5a80ded83438318c05007bfb:5a88cf726131316c05000767"
    }
  }
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Remove Item from Actor"
      args {
        call_value {
          functionName: "Get Map Item (Item)"
          args {
            string_value: "Tsang Disguise"
          }
        }
      }
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Player)"
              args {
                int_value: 0
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Add Item to Actor"
      args {
        call_value {
          functionName: "Get Map Item (Item)"
          args {
            string_value: "Player_HK_Combat_6"
          }
        }
      }
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Player)"
              args {
                int_value: 0
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Add Item to Actor"
      args {
        call_value {
          functionName: "Get Map Item (Item)"
          args {
            string_value: "DocWagonBasic"
          }
        }
      }
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Player)"
              args {
                int_value: 0
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "bGot_Armor"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Delete Props by Tag"
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "heavyarmor"
          }
        }
      }
      args {
        float_value: -1
      }
      args {
        call_value {
          functionName: "Everywhere"
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "5a88cf726131316c0500076a"
  }
  index: 4
  text: "Before you thank me, remember this stuff is heavy and hot. You can thank me be hosing it out before you turn it in so I don\'t have a room full of crusted BDUs and soldier ballsweat killing me.\n\nWhat else do you need, $+(l.lastname)?"
  branches {
    responseText: ""
    nextNodeIndex: 2
    idRef {
      id: "5a80ded83438318c05007bfb:5a80f8633438311411005eea"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5a80f92f3438311411005f38"
  }
  index: 5
  text: "{{GM}}The ork quartermaster gives you a broad snaggle-toothed smile.{{/GM}}\n\nWe can definitely find you armament in your particular flavor. What\'s your poison?"
  branches {
    responseText: "Rifle"
    actions {
      ops {
        functionName: "Set Variable (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "bGot_Firearm"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
      ops {
        functionName: "Add Item to Actor"
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "AR 1 Semopal vz88v"
            }
          }
        }
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 0
            }
          }
        }
      }
    }
    nextNodeIndex: 6
    idRef {
      id: "5a80ded83438318c05007bfb:5a80f9513438311411005f3a"
    }
  }
  branches {
    responseText: "Shotgun"
    actions {
      ops {
        functionName: "Set Variable (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "bGot_Firearm"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
      ops {
        functionName: "Add Item to Actor"
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "Sh 1 Benelli Raffaello"
            }
          }
        }
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 0
            }
          }
        }
      }
    }
    nextNodeIndex: 7
    idRef {
      id: "5a80ded83438318c05007bfb:5a80f9513438311411005f3c"
    }
  }
  branches {
    responseText: "SMG"
    actions {
      ops {
        functionName: "Set Variable (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "bGot_Firearm"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
      ops {
        functionName: "Add Item to Actor"
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "SMG 1 Beretta Model 70"
            }
          }
        }
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 0
            }
          }
        }
      }
    }
    nextNodeIndex: 8
    idRef {
      id: "5a80ded83438318c05007bfb:5a80f97d3438311411005f40"
    }
  }
  branches {
    responseText: "Pistol"
    actions {
      ops {
        functionName: "Set Variable (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "bGot_Firearm"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
      ops {
        functionName: "Add Item to Actor"
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "Pi 1 Ceska Black Scorpion"
            }
          }
        }
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 0
            }
          }
        }
      }
    }
    nextNodeIndex: 9
    idRef {
      id: "5a80ded83438318c05007bfb:5a80f9553438311411005f3e"
    }
  }
  branches {
    responseText: "{{CC}}How about something else.{{/CC}}"
    nextNodeIndex: 10
    idRef {
      id: "5a80ded83438318c05007bfb:5a80f9873438311411005f42"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5a80fec934383114110062d0"
  }
  index: 6
  text: "{{GM}}The ork nods, moving a Sempoval v88 into your gear pile.{{/GM}}\n\nHard to go wrong with a lead-hose. I\'ll pack you a bunch of extra mags, too, so you don\'t run out of ammunition.\n\nAnything else?"
  branches {
    responseText: ""
    nextNodeIndex: 2
    idRef {
      id: "5a80ded83438318c05007bfb:5a80fee334383114110062d2"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5a80fef63438311411006339"
  }
  index: 7
  text: "{{GM}}The ork grins.{{/GM}}\n\n$+(l.man) after my own heart. I got just the boomstick, a Benellli with a slick action.\n\nAnything else?"
  branches {
    responseText: ""
    nextNodeIndex: 2
    idRef {
      id: "5a80ded83438318c05007bfb:5a80ff883438311411006342"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5a80ff66343831141100633c"
  }
  index: 8
  text: "{{GM}}The ork raises an eyebrow, but adds the Beretta to the pile.{{/GM}}\n\nSpray and pray is a popular choice, let\'s give you a step up on those gutterpunks with Uzis.\n\nAnything else?"
  branches {
    responseText: ""
    nextNodeIndex: 2
    idRef {
      id: "5a80ded83438318c05007bfb:5a80ff81343831141100633e"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5a80ffeb3438311411006347"
  }
  index: 9
  text: "{{GM}}The quartermaster shakes his head.{{/GM}}\n\nI wish I had our ARES Predators with the smartlink for you, but those were in the gear that was stolen. I assume the Triads are selling them for 100\302\245 a pop in the city, if you get a chance to do any shopping with street vendors. In their place, we got some of those Black Scorpions.\n\nAnything else?"
  branches {
    responseText: ""
    nextNodeIndex: 2
    idRef {
      id: "5a80ded83438318c05007bfb:5a80fff53438311411006349"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5a80f9923438311411005f45"
  }
  index: 10
  text: "{{GM}}The ork nods.{{/GM}}\n\nYou got it. What do you need?"
  branches {
    responseText: ""
    nextNodeIndex: 2
    idRef {
      id: "5a80ded83438318c05007bfb:5a80f99d3438311411005f47"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5a80fa233438311411005fd7"
  }
  index: 11
  text: "{{GM}}The ork quartermaster shakes his head.{{/GM}}\n\nAgain, I can\'t apologize enough, but most of the gear for Operation Cannonball was sent ahead before the troops, which is the warehouse those runners hit. \nOur options are limited, but I\'ll see what I can do for you."
  branches {
    responseText: "Throwing Knives"
    actions {
      ops {
        functionName: "Add Item to Actor"
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "Tb 1 Knife"
            }
          }
        }
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 0
            }
          }
        }
      }
      ops {
        functionName: "Set Variable (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "bGot_Melee"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    nextNodeIndex: 12
    idRef {
      id: "5a80ded83438318c05007bfb:5a80fa383438311411005fd9"
    }
  }
  branches {
    responseText: "Shurikens"
    actions {
      ops {
        functionName: "Add Item to Actor"
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "Tb 2 Shuriken"
            }
          }
        }
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 0
            }
          }
        }
      }
      ops {
        functionName: "Set Variable (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "bGot_Melee"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    nextNodeIndex: 13
    idRef {
      id: "5a80ded83438318c05007bfb:5a80fa383438311411005fdb"
    }
  }
  branches {
    responseText: "Axe"
    conditions {
      ops {
        functionName: "Compare Actor Skill"
        args {
          call_value {
            functionName: "Get Map Item (Player)"
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "BaseOrCurrent"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "ActorSkills"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 3
            }
          }
        }
        args {
          int_value: 5
        }
      }
    }
    nextNodeIndex: 14
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "5a80ded83438318c05007bfb:5a80fa3a3438311411005fdd"
    }
  }
  branches {
    responseText: "Machete"
    nextNodeIndex: 15
    idRef {
      id: "5a80ded83438318c05007bfb:5a80fb073438311411006025"
    }
  }
  branches {
    responseText: "Bat"
    nextNodeIndex: 17
    idRef {
      id: "5a80ded83438318c05007bfb:5a80fb073438311411006027"
    }
  }
  branches {
    responseText: "{{CC}}Something else, I guess.{{/CC}}"
    nextNodeIndex: 18
    idRef {
      id: "5a80ded83438318c05007bfb:5a80fb26343831141100602b"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5a80fab13438311411005fe0"
  }
  index: 12
  text: "Throwing knives I can do. I wish I had some of the dikoted ones for you.\n\nAnything else?"
  branches {
    responseText: ""
    nextNodeIndex: 2
    idRef {
      id: "5a80ded83438318c05007bfb:5a80fabd3438311411005fe2"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5a80fad33438311411006020"
  }
  index: 13
  text: "{{GM}}The quarter master gives you a sly grin.{{/GM}}\n\nSomeone has been watching \'A Night of a Million Bajillion Ninjas\' sims. \nI prefer a good ol\' fashion lead slinger, but it\'s not my business to judge."
  branches {
    responseText: ""
    nextNodeIndex: 2
    idRef {
      id: "5a80ded83438318c05007bfb:5a8112ad3438315815002cd3"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5a80fb91343831141100607e"
  }
  index: 14
  text: "{{GM}}The quartermaster raises an eyebrow. {{/GM}}\n\nExpecting to do some lumberjacking in town? From what I hear, Hong Kong is short on log monsters.\nActually, I think I have one for a fire rescue unit that was assigned to us by mistake.\n\nNow their mistake is your gain. Anything else?"
  branches {
    responseText: ""
    nextNodeIndex: 2
    idRef {
      id: "5a80ded83438318c05007bfb:5a80fc1534383114110060c1"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Add Item to Actor"
      args {
        call_value {
          functionName: "Get Map Item (Item)"
          args {
            string_value: "Sword 2 Axe"
          }
        }
      }
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Player)"
              args {
                int_value: 0
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "bGot_Melee"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "5a80fc213438311411006113"
  }
  index: 15
  text: "{{GM}}The quartermaster raises an eyebrow at you.{{/GM}}\n\nYour orders did mention this is an urban action, right? Bang bang?\nNot some third-world jungle?"
  branches {
    responseText: ""
    nextNodeIndex: 16
    idRef {
      id: "5a80ded83438318c05007bfb:5a88d3d46131316c05000801"
    }
  }
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Add Item to Actor"
      args {
        call_value {
          functionName: "Get Map Item (Item)"
          args {
            string_value: "Sword 1 Machete"
          }
        }
      }
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Player)"
              args {
                int_value: 0
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "bGot_Melee"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "5a88d3d46131316c05000804"
  }
  index: 16
  text: "{{GM}}He shrugs.{{/GM}}\n\nLucky for you, our katanas were in the equipment that was stolen, so here is a machete. Chop to your heart\'s content."
  branches {
    responseText: ""
    nextNodeIndex: 2
    idRef {
      id: "5a80ded83438318c05007bfb:5a80fc403438311411006115"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5a80fccf34383114110061a6"
  }
  index: 17
  text: "{{GM}}The quartermaster shrugs.{{/GM}}\n\nOk, A-Rod, we\'ll get you a bat. Make sure to get a matching glove, and oil it before the big game..."
  branches {
    responseText: ""
    nextNodeIndex: 2
    idRef {
      id: "5a80ded83438318c05007bfb:5a80fcee34383114110061a8"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Add Item to Actor"
      args {
        call_value {
          functionName: "Get Map Item (Item)"
          args {
            string_value: "Sword 1 Baseball Bat"
          }
        }
      }
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Player)"
              args {
                int_value: 0
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "bGot_Melee"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "5a80fb41343831141100602e"
  }
  index: 18
  text: "We\'ve got plenty of \'something else\'.\n\nWhat do you need?"
  branches {
    responseText: ""
    nextNodeIndex: 2
    idRef {
      id: "5a80ded83438318c05007bfb:5a80fb4d3438311411006030"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5a80f9d03438311411005f9a"
  }
  index: 19
  text: "We have a store of hermetic spells and shamanic supplies. \n\nI need a designation for the paperwork. Which devotion do you need?"
  branches {
    responseText: "Shaman"
    conditions {
      ops {
        functionName: "AND"
        args {
          call_value {
            functionName: "Compare Actor Skill"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "BaseOrCurrent"
                }
                args {
                  int_value: 1
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "ActorSkills"
                }
                args {
                  int_value: 8
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "Comparison Ops"
                }
                args {
                  int_value: 2
                }
              }
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Comparison (bool)"
            args {
              call_value {
                functionName: "Get Variable (bool)"
                args {
                  string_value: "bGot_Magic"
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "IsOrIsNot"
                }
                args {
                  int_value: 1
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "bool"
                }
                args {
                  int_value: 0
                }
              }
            }
          }
        }
      }
    }
    actions {
      ops {
        functionName: "Set Variable (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "bGot_Magic"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
      ops {
        functionName: "Add Item to Actor"
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "Spell Armor 1"
            }
          }
        }
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 0
            }
          }
        }
      }
      ops {
        functionName: "Add Item to Actor"
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "Spell Toxic Bolt 1"
            }
          }
        }
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 0
            }
          }
        }
      }
      ops {
        functionName: "Add Item to Actor"
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "Spell Haste 1"
            }
          }
        }
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 0
            }
          }
        }
      }
      ops {
        functionName: "Add Item to Actor"
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "Bound Air Spirit 1"
            }
          }
        }
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 0
            }
          }
        }
      }
    }
    nextNodeIndex: 20
    hideIfUnavailable: true
    idRef {
      id: "5a80ded83438318c05007bfb:5a80f9e23438311411005f9e"
    }
  }
  branches {
    responseText: "Spell Casting"
    conditions {
      ops {
        functionName: "AND"
        args {
          call_value {
            functionName: "Compare Actor Skill"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "BaseOrCurrent"
                }
                args {
                  int_value: 1
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "ActorSkills"
                }
                args {
                  int_value: 3
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "Comparison Ops"
                }
                args {
                  int_value: 2
                }
              }
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Comparison (bool)"
            args {
              call_value {
                functionName: "Get Variable (bool)"
                args {
                  string_value: "bGot_Magic"
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "IsOrIsNot"
                }
                args {
                  int_value: 1
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "bool"
                }
                args {
                  int_value: 0
                }
              }
            }
          }
        }
      }
    }
    actions {
      ops {
        functionName: "Add Item to Actor"
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "Spell Powerbolt 1"
            }
          }
        }
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 0
            }
          }
        }
      }
      ops {
        functionName: "Add Item to Actor"
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "Spell Heal 1"
            }
          }
        }
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 0
            }
          }
        }
      }
      ops {
        functionName: "Add Item to Actor"
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "Spell Aim 1"
            }
          }
        }
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 0
            }
          }
        }
      }
      ops {
        functionName: "Add Item to Actor"
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "Spell Flamethrower 1"
            }
          }
        }
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 0
            }
          }
        }
      }
      ops {
        functionName: "Set Variable (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "bGot_Magic"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    nextNodeIndex: 21
    hideIfUnavailable: true
    idRef {
      id: "5a80ded83438318c05007bfb:5a80f9e13438311411005f9c"
    }
  }
  branches {
    responseText: "Chi Casting"
    conditions {
      ops {
        functionName: "AND"
        args {
          call_value {
            functionName: "Compare Actor Skill"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "BaseOrCurrent"
                }
                args {
                  int_value: 1
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "ActorSkills"
                }
                args {
                  int_value: 4
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "Comparison Ops"
                }
                args {
                  int_value: 2
                }
              }
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Comparison (bool)"
            args {
              call_value {
                functionName: "Get Variable (bool)"
                args {
                  string_value: "bGot_Magic"
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "IsOrIsNot"
                }
                args {
                  int_value: 1
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "bool"
                }
                args {
                  int_value: 0
                }
              }
            }
          }
        }
      }
    }
    actions {
      ops {
        functionName: "Set Variable (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "bGot_Magic"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
      ops {
        functionName: "Add Item to Actor"
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "Killing Hands"
            }
          }
        }
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 0
            }
          }
        }
      }
      ops {
        functionName: "Add Item to Actor"
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "Stride"
            }
          }
        }
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 0
            }
          }
        }
      }
      ops {
        functionName: "Add Item to Actor"
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "Magic Resistance 1"
            }
          }
        }
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 0
            }
          }
        }
      }
      ops {
        functionName: "Add Item to Actor"
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "Celestial Mana Fist"
            }
          }
        }
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 0
            }
          }
        }
      }
    }
    nextNodeIndex: 22
    hideIfUnavailable: true
    idRef {
      id: "5a80ded83438318c05007bfb:5a80f9e23438311411005fa0"
    }
  }
  branches {
    responseText: "Something else..."
    nextNodeIndex: 23
    idRef {
      id: "5a80ded83438318c05007bfb:5a80f9f43438311411005fa2"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5a81025434383114110065ad"
  }
  index: 20
  text: "{{GM}}The quartermaster adds some leather strips, feathers, and fetishes to your gear.{{/GM}}\n\nNow don\'t go summoning these things here, they\'ll wreck the damned place. Do that shit outside."
  branches {
    responseText: ""
    nextNodeIndex: 2
    idRef {
      id: "5a80ded83438318c05007bfb:5a81026434383114110065af"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5a8100e63438311411006477"
  }
  index: 21
  text: "{{GM}}The quartermaster checks the orders and shakes his head.{{/GM}}\n\nI\'m sorry, but they\'ve only got you cleared for the low-level stuff. I wish our ritual supplies hadn\'t been stolen by those fraggers. \nI\'ll set you up with what little I do have access to."
  branches {
    responseText: ""
    nextNodeIndex: 2
    idRef {
      id: "5a80ded83438318c05007bfb:5a8101ce343831141100652b"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5a8102ed3438311411006637"
  }
  index: 22
  text: "{{GM}}The quartermaster nods.{{/GM}}\n\nI don\'t have much in the way of Mister Punchy magic, but what I do have you\'ve got."
  branches {
    responseText: ""
    nextNodeIndex: 2
    idRef {
      id: "5a80ded83438318c05007bfb:5a810b113438311411006fc3"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5a8100ce34383114110063f8"
  }
  index: 23
  text: "We\'ve got plenty of \'something else\'.\n\nWhat do you need?"
  branches {
    responseText: ""
    nextNodeIndex: 2
    idRef {
      id: "5a80ded83438318c05007bfb:5a8100d934383114110063fa"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5a81031d3438311411006699"
  }
  index: 24
  text: "{{GM}}The quartermaster nods. {{/GM}}\n\nYou have a tech designation assigned to your squad. Do you want the Decker or Rigger loadout?\nYou\'ll probably need a datajack, too."
  branches {
    responseText: ""
    nextNodeIndex: 25
    idRef {
      id: "5a80ded83438318c05007bfb:5a810b3334383114110070ab"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5a810b3334383114110070ae"
  }
  index: 25
  text: ""
  branches {
    responseText: "A datajack?"
    conditions {
      ops {
        functionName: "OR"
        args {
          call_value {
            functionName: "Evaluate If Actor Has Item"
            args {
              call_value {
                functionName: "Specific Actor"
                args {
                  call_value {
                    functionName: "Get Map Item (Player)"
                    args {
                      int_value: 0
                    }
                  }
                }
                args {
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "HasOrHasNot"
                }
                args {
                  int_value: 0
                }
              }
            }
            args {
              call_value {
                functionName: "Get Map Item (Item)"
                args {
                  string_value: "(Head) Datajack"
                }
              }
            }
          }
        }
        args {
          call_value {
            functionName: "OR"
            args {
              call_value {
                functionName: "Evaluate If Actor Has Item"
                args {
                  call_value {
                    functionName: "Specific Actor"
                    args {
                      call_value {
                        functionName: "Get Map Item (Player)"
                        args {
                          int_value: 0
                        }
                      }
                    }
                    args {
                    }
                  }
                }
                args {
                  call_value {
                    functionName: "Get Preset Value (int)"
                    args {
                      string_value: "HasOrHasNot"
                    }
                    args {
                      int_value: 0
                    }
                  }
                }
                args {
                  call_value {
                    functionName: "Get Map Item (Item)"
                    args {
                      string_value: "(Eyes) Eye Datajack"
                    }
                  }
                }
              }
            }
            args {
              call_value {
                functionName: "Evaluate If Actor Has Item"
                args {
                  call_value {
                    functionName: "Specific Actor"
                    args {
                      call_value {
                        functionName: "Get Map Item (Player)"
                        args {
                          int_value: 0
                        }
                      }
                    }
                    args {
                    }
                  }
                }
                args {
                  call_value {
                    functionName: "Get Preset Value (int)"
                    args {
                      string_value: "HasOrHasNot"
                    }
                    args {
                      int_value: 0
                    }
                  }
                }
                args {
                  call_value {
                    functionName: "Get Map Item (Item)"
                    args {
                      string_value: "(Arm) Induction Datajack"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    actions {
      ops {
        functionName: "Add Nuyen"
        args {
          int_value: 1000
        }
      }
    }
    nextNodeIndex: 26
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "5a80ded83438318c05007bfb:5a81035e343831141100673b"
    }
  }
  branches {
    responseText: "Decker loadout"
    conditions {
      ops {
        functionName: "AND"
        args {
          call_value {
            functionName: "Compare Actor Skill"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "BaseOrCurrent"
                }
                args {
                  int_value: 1
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "ActorSkills"
                }
                args {
                  int_value: 5
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "Comparison Ops"
                }
                args {
                  int_value: 2
                }
              }
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Comparison (bool)"
            args {
              call_value {
                functionName: "Get Variable (bool)"
                args {
                  string_value: "bGot_Tech"
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "IsOrIsNot"
                }
                args {
                  int_value: 1
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "bool"
                }
                args {
                  int_value: 0
                }
              }
            }
          }
        }
      }
    }
    actions {
      ops {
        functionName: "Add Item to Actor"
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "CyberdeckKraftwerk1"
            }
          }
        }
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 0
            }
          }
        }
      }
      ops {
        functionName: "Add Item to Actor"
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "PR Degrade 1"
            }
          }
        }
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 0
            }
          }
        }
      }
      ops {
        functionName: "Add Item to Actor"
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "PR Blaster 1"
            }
          }
        }
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 0
            }
          }
        }
      }
      ops {
        functionName: "Add Item to Actor"
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "PR Erosion 1"
            }
          }
        }
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 0
            }
          }
        }
      }
      ops {
        functionName: "Add Item to Actor"
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "PR Medic 1"
            }
          }
        }
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 0
            }
          }
        }
      }
      ops {
        functionName: "Set Variable (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "bGot_Tech"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    nextNodeIndex: 28
    idRef {
      id: "5a80ded83438318c05007bfb:5a810336343831141100669d"
    }
  }
  branches {
    responseText: "Rigger loadout"
    conditions {
      ops {
        functionName: "AND"
        args {
          call_value {
            functionName: "Compare Actor Skill"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "BaseOrCurrent"
                }
                args {
                  int_value: 1
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "ActorSkills"
                }
                args {
                  int_value: 10
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "Comparison Ops"
                }
                args {
                  int_value: 2
                }
              }
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Comparison (bool)"
            args {
              call_value {
                functionName: "Get Variable (bool)"
                args {
                  string_value: "bGot_Tech"
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "IsOrIsNot"
                }
                args {
                  int_value: 1
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "bool"
                }
                args {
                  int_value: 0
                }
              }
            }
          }
        }
      }
    }
    actions {
      ops {
        functionName: "Add Item to Actor"
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "Errant_Low_Drone"
            }
          }
        }
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 0
            }
          }
        }
      }
      ops {
        functionName: "Add Item to Actor"
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "DroneRepairKit_Self"
            }
          }
        }
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 0
            }
          }
        }
      }
      ops {
        functionName: "Add Item to Actor"
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "DroneRepairKit"
            }
          }
        }
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 0
            }
          }
        }
      }
      ops {
        functionName: "Add Item to Actor"
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "DroneRepairKit"
            }
          }
        }
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 0
            }
          }
        }
      }
      ops {
        functionName: "Set Variable (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "bGot_Tech"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    nextNodeIndex: 29
    idRef {
      id: "5a80ded83438318c05007bfb:5a810336343831141100669b"
    }
  }
  branches {
    responseText: "Maybe something else."
    nextNodeIndex: 30
    idRef {
      id: "5a80ded83438318c05007bfb:5a810338343831141100669f"
    }
  }
  nodeType: ConversationNodeType_Simple
  comment: "TechLoop"
}
nodes {
  idRef {
    id: "5a810d42343831141100731f"
  }
  index: 26
  text: "{{GM}}The quartermaster pushes a few keys.{{/GM}}\n\nDatajack I can do. We\'ll get you set up with the autodoc right here.\n\nAny more extensive cyberware I\'m afraid I can\'t help you with. Our CO requires that KE personnel get chromed on their own time and own dime."
  branches {
    responseText: ""
    actions {
      ops {
        functionName: "Open Cyberware Screen From Actor"
        args {
          call_value {
            functionName: "Get Map Item (Actor)"
            args {
              string_value: "5a80d2df3438318c05007b77"
            }
          }
        }
      }
    }
    nextNodeIndex: 27
    idRef {
      id: "5a80ded83438318c05007bfb:5a810d633438311411007321"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5a810d6a3438311411007324"
  }
  index: 27
  text: "All good? Any dizzyness or blurred vision? No?\n\nGood. Anything else you need?"
  branches {
    responseText: ""
    nextNodeIndex: 25
    idRef {
      id: "5a80ded83438318c05007bfb:5a810d7d3438311411007404"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Remove Nuyen"
      args {
        int_value: 1000
      }
    }
  }
}
nodes {
  idRef {
    id: "5a8106173438311411006950"
  }
  index: 28
  text: "{{GM}}The ork gives you a snort of derision.{{/GM}}\n\nFor the life of me, I\'ll never understand why they want a cyberdeck jockey in charge of soldiers. \n\nNo offense.\n"
  branches {
    responseText: ""
    nextNodeIndex: 2
    idRef {
      id: "5a80ded83438318c05007bfb:5a8106483438311411006952"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5a8106fc3438311411006a62"
  }
  index: 29
  text: "{{GM}}The quartermaster nods.{{/GM}}\n\nThose little drones are cute. Our big ones got nicked, and those big ones are downright nasty."
  branches {
    responseText: ""
    nextNodeIndex: 2
    idRef {
      id: "5a80ded83438318c05007bfb:5a8107133438311411006a64"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5a81034334383114110066a2"
  }
  index: 30
  text: "Such as?"
  branches {
    responseText: ""
    nextNodeIndex: 2
    idRef {
      id: "5a80ded83438318c05007bfb:5a81034934383114110066a4"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5a8107323438311411006b7f"
  }
  index: 31
  text: "Sure thing, take all the time you need."
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5a8107b03438311411006bf6"
  }
  index: 32
  text: "Fair enough.\n\nOkay, your orders have a pack assigned to you. Do you want a support pack? Or would you prefer the assault pack?"
  branches {
    responseText: ""
    nextNodeIndex: 33
    idRef {
      id: "5a80ded83438318c05007bfb:5a8107df3438311411006c01"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5a8107df3438311411006c04"
  }
  index: 33
  text: ""
  branches {
    responseText: "What\'s in the packs?"
    nextNodeIndex: 34
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "5a80ded83438318c05007bfb:5a8107d13438311411006bf8"
    }
  }
  branches {
    responseText: "Assault pack."
    actions {
      ops {
        functionName: "Add Item to Actor"
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "Grenade 1 (Frag)"
            }
          }
        }
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 0
            }
          }
        }
      }
      ops {
        functionName: "Add Item to Actor"
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "Grenade (Smoke)"
            }
          }
        }
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 0
            }
          }
        }
      }
      ops {
        functionName: "Add Item to Actor"
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "Kamikaze"
            }
          }
        }
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 0
            }
          }
        }
      }
      ops {
        functionName: "Add Item to Actor"
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "HyperEX"
            }
          }
        }
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 0
            }
          }
        }
      }
    }
    nextNodeIndex: 35
    idRef {
      id: "5a80ded83438318c05007bfb:5a8107d13438311411006bfa"
    }
  }
  branches {
    responseText: "Support pack"
    actions {
      ops {
        functionName: "Add Item to Actor"
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "DocWagonGold"
            }
          }
        }
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 0
            }
          }
        }
      }
      ops {
        functionName: "Add Item to Actor"
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "HealthPack 1"
            }
          }
        }
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 0
            }
          }
        }
      }
      ops {
        functionName: "Add Item to Actor"
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "HealthPack 1"
            }
          }
        }
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 0
            }
          }
        }
      }
      ops {
        functionName: "Add Item to Actor"
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "Regeneration Salve 1"
            }
          }
        }
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 0
            }
          }
        }
      }
    }
    nextNodeIndex: 36
    idRef {
      id: "5a80ded83438318c05007bfb:5a8107d33438311411006bfc"
    }
  }
  branches {
    responseText: "Pass, but thanks."
    nextNodeIndex: 37
    onlyOnce: true
    idRef {
      id: "5a80ded83438318c05007bfb:5a8108033438311411006c81"
    }
  }
  nodeType: ConversationNodeType_Simple
  comment: "PackLoop"
}
nodes {
  idRef {
    id: "5a8108783438311411006d06"
  }
  index: 34
  text: "{{GM}}The quartermaster weighs imaginary weights in two hands.{{/GM}}\n\nOne the one hand, the assault pack is grenades, and combat stims. Useful to have in a short fight.\n\nOn the other hand, the support pack has medical supplies, and some of that voodoo salve stuff. Handy for longer engagements.\n\nWhich do you want?"
  branches {
    responseText: ""
    nextNodeIndex: 33
    idRef {
      id: "5a80ded83438318c05007bfb:5a810a1b3438311411006e31"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5a8108b13438311411006d09"
  }
  index: 35
  text: "{{GM}}The quartermaster puts a green bundle on the pile. It has a frag grenade, a smoke grenade, and some patches.{{/GM}}\n\nYou\'ve got it all here, you are good to go.\nReport to the motorpool with your gear, grab your squad and get moving."
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "bMotorPool_Open"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Set Waypoint on Prop"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "PrimaryOrSecondary"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "5a80cac33438318c05007a33"
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "5a8109df3438311411006e08"
  }
  index: 36
  text: "{{GM}}The quartermaster puts a green bundle with a red cross on the pile.{{/GM}}\n\nYou\'ve got it all here, and you are good to go.\nReport to the motorpool with your gear, grab your squad and get moving."
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "bMotorPool_Open"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Set Waypoint on Prop"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "PrimaryOrSecondary"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "5a80cac33438318c05007a33"
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "5a8108113438311411006c84"
  }
  index: 37
  text: "{{GM}}The quartermaster raises an eyebrow.{{/GM}}\n\nI forget that you shadow-types don\'t work with military gear often. Are you sure?"
  branches {
    responseText: "Yes."
    nextNodeIndex: 38
    idRef {
      id: "5a80ded83438318c05007bfb:5a88d6dc6131316c050009c1"
    }
  }
  branches {
    responseText: "On second thought..."
    nextNodeIndex: 39
    idRef {
      id: "5a80ded83438318c05007bfb:5a88d7136131316c050009c6"
    }
  }
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Set Waypoint on Prop"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "PrimaryOrSecondary"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "5a80cac33438318c05007a33"
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "bMotorPool_Open"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "5a88d6dc6131316c050009c4"
  }
  index: 38
  text: "{{GM}}He looks a bit shocked, but shrugs nonchalantly.{{/GM}}\n\nI forget you shadow types don\'t work with military gear often. \n\nThe KE squaddies are waiting in the motorpool. Good luck out there, $+(l.lastname)."
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5a88d7176131316c050009c9"
  }
  index: 39
  text: "{{GM}}The quartermaster nods.{{/GM}}\n\nDiscretion is the better part of valor, and all that. Which do you want?"
  branches {
    responseText: ""
    nextNodeIndex: 33
    idRef {
      id: "5a80ded83438318c05007bfb:5a88d7386131316c050009cb"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5a80ee37343831a81b005e1f"
  }
  index: 40
  text: "{{GM}}The ork behind the desk looks weathered and surly, but snaps a crisp salute and greets you with a smile.{{/GM}}\n\nHey, $+(l.lastname). We didn\'t get to meet when you came in. I\'m Sergeant Oblando, the quartermaster.\n\nDo you have your orders? What can I get for you?"
  branches {
    responseText: ""
    nextNodeIndex: 41
    idRef {
      id: "5a80ded83438318c05007bfb:5a80ee77343831a81b005e2c"
    }
  }
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "bTalkedToQuartermaster"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "5a80ee77343831a81b005e2f"
  }
  index: 41
  text: ""
  branches {
    responseText: "I need orders."
    nextNodeIndex: 42
    idRef {
      id: "5a80ded83438318c05007bfb:5a88cc896131316c05000354"
    }
  }
  branches {
    responseText: "Can I get my gear back?"
    conditions {
      ops {
        functionName: "Comparison (int)"
        args {
          call_value {
            functionName: "Get Variable (int)"
            args {
              string_value: "iPlayerKarma"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 2
            }
          }
        }
        args {
          int_value: 55
        }
      }
    }
    nextNodeIndex: 43
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "5a80ded83438318c05007bfb:5a80eeab3438311411005e21"
    }
  }
  branches {
    responseText: "Can I get some gear?"
    conditions {
      ops {
        functionName: "Comparison (int)"
        args {
          call_value {
            functionName: "Get Variable (int)"
            args {
              string_value: "iPlayerKarma"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 5
            }
          }
        }
        args {
          int_value: 55
        }
      }
    }
    nextNodeIndex: 45
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "5a80ded83438318c05007bfb:5a80f6173438311411005e84"
    }
  }
  branches {
    responseText: "Talk to you later."
    nextNodeIndex: 46
    idRef {
      id: "5a80ded83438318c05007bfb:5a80f6943438311411005e88"
    }
  }
  nodeType: ConversationNodeType_Simple
  comment: "NoGearLoop"
}
nodes {
  idRef {
    id: "5a88cc9a6131316c05000357"
  }
  index: 42
  text: "{{GM}}The quartermaster nods to the north.{{/GM}}\n\nYou\'ll want to head up to the CO\'s office. Captain Hanson isn\'t meeting with team leads, but if I understood the squawk-box, they\'re passing out assignments."
  branches {
    responseText: ""
    nextNodeIndex: 41
    idRef {
      id: "5a80ded83438318c05007bfb:5a88cd026131316c05000359"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5a80f5da3438311411005e77"
  }
  index: 43
  text: "{{GM}}The quartermaster shakes his head.{{/GM}}\n\nSorry, $(l.lastname). The soldiers who dragged you in from that last firefight had to decide between your gear and your life.\nLucky for you, I guess, they decided that your meat-bag was more important than your goodies.\n\nA week in the bio-vat, and you\'re good as new. Fragged whatever cyber you had, though."
  branches {
    responseText: "Damn.   I guess I\'m gonna owe someone some birthday cards."
    conditions {
      ops {
        functionName: "Compare Actor Attribute"
        args {
          call_value {
            functionName: "Get Map Item (Player)"
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "BaseOrCurrent"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "ActorAttributes"
            }
            args {
              int_value: 13
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 4
            }
          }
        }
        args {
          int_value: 5
        }
      }
    }
    actions {
      ops {
        functionName: "Set Actor Base Attribute"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          int_value: 5
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "ActorAttributes"
            }
            args {
              int_value: 13
            }
          }
        }
      }
    }
    nextNodeIndex: 44
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "5a80ded83438318c05007bfb:5a80f60d3438311411005e79"
    }
  }
  branches {
    responseText: "Damn.   I guess I\'m gonna owe someone some birthday cards."
    conditions {
      ops {
        functionName: "Compare Actor Attribute"
        args {
          call_value {
            functionName: "Get Map Item (Player)"
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "BaseOrCurrent"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "ActorAttributes"
            }
            args {
              int_value: 13
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          int_value: 5
        }
      }
    }
    nextNodeIndex: 44
    idRef {
      id: "5a80ded83438318c05007bfb:5a81290a3438313018003f41"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5a80f6993438311411005e8b"
  }
  index: 44
  text: "{{GM}}He chuckles.{{/GM}}\n\nYeah, I guess so."
  branches {
    responseText: ""
    nextNodeIndex: 41
    idRef {
      id: "5a80ded83438318c05007bfb:5a8129e53438313018003f61"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5a80f6d23438311411005e92"
  }
  index: 45
  text: "{{GM}}The quartermaster shrugs.{{/GM}}\n\nSure.\n\nOnce you have orders, I\'ll be able to release gear packages from storage for you and your squad."
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5a80f6fa3438311411005e95"
  }
  index: 46
  text: "{{GM}}The quartermaster nods, turning his head so his eyepatch blocks the view of you.{{/GM}}\n\nSure thing, $+(l.lastname), I\'ll be here."
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5a80f72b3438311411005e98"
  }
  index: 47
  text: "{{GM}}The ork behind the counter looks surprised at your return.{{/GM}}\n\nYou\'re back quick. Did you get your orders figured out?"
  branches {
    responseText: ""
    nextNodeIndex: 41
    idRef {
      id: "5a80ded83438318c05007bfb:5a80f7393438311411005e9a"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
roots {
  responseText: ""
  conditions {
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "bTalkedToQuartermaster"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "bGearAvailable"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Clear Waypoint from Actor"
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "5a80d2df3438318c05007b77"
          }
        }
      }
    }
  }
  nextNodeIndex: 0
  idRef {
    id: "5a80ded83438318c05007bfb:5a80df1a3438318c05007c0a"
  }
  comment: "Gear Available (Return)"
}
roots {
  conditions {
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "bGearAvailable"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "bTalkedToQuartermaster"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Clear Waypoint from Actor"
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "5a80d2df3438318c05007b77"
          }
        }
      }
    }
  }
  nextNodeIndex: 1
  idRef {
    id: "5a80ded83438318c05007bfb:5a80ded83438318c05007bff"
  }
  comment: "Gear Available (1st)"
}
roots {
  responseText: ""
  conditions {
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "bGearAvailable"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "bTalkedToQuartermaster"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  nextNodeIndex: 40
  idRef {
    id: "5a80ded83438318c05007bfb:5a80dee93438318c05007c02"
  }
  comment: "No Gear"
}
roots {
  responseText: ""
  conditions {
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "bGearAvailable"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "bTalkedToQuartermaster"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  nextNodeIndex: 47
  idRef {
    id: "5a80ded83438318c05007bfb:5a80df1a3438318c05007c0c"
  }
  comment: "No Gear (Return)"
}
